package com.stack;

public class DynamicStackorArray {
	
	int capacity=2;
	
	int stack[]=new int [5];
	int top=0;
	
	public void push(int data) {
		
		if(size()==capacity)
			expand();
		
		stack[top]=data;
		top++;
		
	}
	
	private void expand() {
		int length=size();
		int newStack []=new int[capacity*2];
		System.arraycopy(stack, 0, newStack, 0, length);
		stack=newStack;
		capacity*=2;
		
	}

	public void peak() {
		
		for(int n:stack) {
			System.out.println(" dynamic stack : "+n);
		}
	}
	
	public int pop() {
		int data=0;
		
		if(isEmpty()) {
			System.out.println(" stack is empty");
		}
		else {
		top--;
		data=stack[top];
		stack[top]=0;
		shrink();
		
		}
		return data;
	}
	
	private void shrink() {
		// TODO Auto-generated method stub
		
	}

	public int size() {
		return top;
		
	}
	
	public boolean isEmpty() {
		return top<=0;
		
	}

}
